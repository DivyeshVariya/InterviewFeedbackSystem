package com.feedbackService.mapper;

import com.feedbackService.dto.FeedbackFormRequestDto;
import com.feedbackService.dto.FeedbackSoftSkillsEvaluationDto;
import com.feedbackService.dto.FeedbackTechnicalEvaluationDto;
import com.feedbackService.model.FeedbackForm;
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.annotation.processing.Generated;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2023-09-22T17:00:51+0530",
    comments = "version: 1.5.5.Final, compiler: javac, environment: Java 17.0.5 (Eclipse Adoptium)"
)
public class AutoFeedbackMapperImpl implements AutoFeedbackMapper {

    @Override
    public FeedbackForm mapToFeedbackForm(FeedbackFormRequestDto feedbackFormRequestDto) {
        if ( feedbackFormRequestDto == null ) {
            return null;
        }

        FeedbackForm feedbackForm = new FeedbackForm();

        feedbackForm.setCandidateInfo( feedbackFormRequestDto.getCandidateInfo() );
        feedbackForm.setInterviewerInfo( feedbackFormRequestDto.getInterviewerInfo() );
        List<FeedbackTechnicalEvaluationDto> list = feedbackFormRequestDto.getTechnicalEvaluation();
        if ( list != null ) {
            feedbackForm.setTechnicalEvaluation( new ArrayList<FeedbackTechnicalEvaluationDto>( list ) );
        }
        List<FeedbackSoftSkillsEvaluationDto> list1 = feedbackFormRequestDto.getSoftSkillsEvaluation();
        if ( list1 != null ) {
            feedbackForm.setSoftSkillsEvaluation( new ArrayList<FeedbackSoftSkillsEvaluationDto>( list1 ) );
        }
        feedbackForm.setHiringDecision( feedbackFormRequestDto.getHiringDecision() );
        if ( feedbackFormRequestDto.getDateOfInterview() != null ) {
            feedbackForm.setDateOfInterview( Date.from( feedbackFormRequestDto.getDateOfInterview().atStartOfDay( ZoneOffset.UTC ).toInstant() ) );
        }

        return feedbackForm;
    }

    @Override
    public FeedbackFormRequestDto mapToFeedbackRequestDto(FeedbackForm feedbackForm) {
        if ( feedbackForm == null ) {
            return null;
        }

        FeedbackFormRequestDto feedbackFormRequestDto = new FeedbackFormRequestDto();

        feedbackFormRequestDto.setCandidateInfo( feedbackForm.getCandidateInfo() );
        feedbackFormRequestDto.setInterviewerInfo( feedbackForm.getInterviewerInfo() );
        List<FeedbackTechnicalEvaluationDto> list = feedbackForm.getTechnicalEvaluation();
        if ( list != null ) {
            feedbackFormRequestDto.setTechnicalEvaluation( new ArrayList<FeedbackTechnicalEvaluationDto>( list ) );
        }
        List<FeedbackSoftSkillsEvaluationDto> list1 = feedbackForm.getSoftSkillsEvaluation();
        if ( list1 != null ) {
            feedbackFormRequestDto.setSoftSkillsEvaluation( new ArrayList<FeedbackSoftSkillsEvaluationDto>( list1 ) );
        }
        feedbackFormRequestDto.setHiringDecision( feedbackForm.getHiringDecision() );
        if ( feedbackForm.getDateOfInterview() != null ) {
            feedbackFormRequestDto.setDateOfInterview( LocalDateTime.ofInstant( feedbackForm.getDateOfInterview().toInstant(), ZoneOffset.UTC ).toLocalDate() );
        }

        return feedbackFormRequestDto;
    }
}
