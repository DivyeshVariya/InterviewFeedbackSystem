package com.apiGateway.exception;

import java.time.LocalDateTime;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;

@ControllerAdvice
public class GlobalExceptionHandler{

	private Logger logger=LoggerFactory.getLogger(GlobalExceptionHandler.class);
	

	@ExceptionHandler(AuthorizationHeaderMissingException.class)
	public ResponseEntity<ErrorDetailsForException> handleGlobalException(AuthorizationHeaderMissingException exception,WebRequest webRequest)
	{
		ErrorDetailsForException errorDetailsForException =new ErrorDetailsForException();
		errorDetailsForException.setErrorCode("MISSING_HEADER");
		errorDetailsForException.setMessage(exception.getMessage());
		errorDetailsForException.setPath(webRequest.getDescription(false));
		errorDetailsForException.setTimestamp(LocalDateTime.now());
		logger.info(errorDetailsForException.toString());
		return new ResponseEntity<>(errorDetailsForException,HttpStatus.INTERNAL_SERVER_ERROR);
	}
	

	@ExceptionHandler(UnKnownURLException.class)
	public ResponseEntity<ErrorDetailsForException> handleGlobalException(UnKnownURLException exception,WebRequest webRequest)
	{
		ErrorDetailsForException errorDetailsForException =new ErrorDetailsForException();
		errorDetailsForException.setErrorCode("UNKONWN_URL");
		errorDetailsForException.setMessage(exception.getMessage());
		errorDetailsForException.setPath(webRequest.getDescription(false));
		errorDetailsForException.setTimestamp(LocalDateTime.now());
		logger.info(errorDetailsForException.toString());
		return new ResponseEntity<>(errorDetailsForException,HttpStatus.INTERNAL_SERVER_ERROR);
	}
	
//	@ExceptionHandler(Exception.class)
//	public ResponseEntity<ErrorDetailsForException> handleGlobalException(Exception exception,WebRequest webRequest)
//	{
//		ErrorDetailsForException errorDetailsForException =new ErrorDetailsForException();
//		errorDetailsForException.setErrorCode(HttpStatus.INTERNAL_SERVER_ERROR.name());
//		errorDetailsForException.setMessage(exception.getMessage());
//		errorDetailsForException.setPath(webRequest.getDescription(false));
//		errorDetailsForException.setTimestamp(LocalDateTime.now());
//		logger.info(errorDetailsForException.toString());
//		return new ResponseEntity<>(errorDetailsForException,HttpStatus.INTERNAL_SERVER_ERROR);
//	}
}
